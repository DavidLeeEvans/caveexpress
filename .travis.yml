os:
  - linux

sudo: false

language:
  - cpp

branches:
 only:
   - master

compiler:
  - gcc

env:
  matrix:
    - USE_BUILTIN=ON TARGET=linux
    - USE_BUILTIN=OFF TARGET=linux

matrix:
  include:
    - os: osx
      compiler: clang
      env: USE_BUILTIN=OFF TARGET=osx

addons:
  apt:
    packages:
    - libbox2d-dev
    - libyajl-dev
    - libglm-dev
    - libgtest-dev
    - libsqlite3-dev
    - liblua5.2-dev
    - zlib1g-dev
    - g++-5
    - gcc-5
    - clang
    - libc6:i386
    - lua5.1
    - libdbus-1-dev
    - build-essential
    - mercurial
    - make
    - cmake
    - autoconf
    - automake
    - libtool
    - libasound2-dev
    - libpulse-dev
    - libaudio-dev
    - libx11-dev
    - libxext-dev
    - libxrandr-dev
    - libxcursor-dev
    - libxi-dev
    - libxinerama-dev
    - libxxf86vm-dev
    - libxss-dev
    - libgl1-mesa-dev
    - libesd0-dev
    - libdbus-1-dev
    - libudev-dev
    - libgles1-mesa-dev
    - libgles2-mesa-dev
    - libegl1-mesa-dev
    - libibus-1.0-dev
    - libsdl2-dev
    - libsdl2-net-dev
    - libsdl2-image-dev
    - libsdl2-mixer-dev
    sources:
    - ubuntu-toolchain-r-test
    - zoogie-sdl2-snapshots

script:
  - cmake --version
  - pkg-config --version
  - g++-5 --version
  - clang++ --version
  - if [ "$TARGET" == "linux" ]; then mkdir build-$TARGET && cd build-$TARGET && cmake .. -DVERBOSE=ON -DUSE_BUILTIN=$USE_BUILTIN && make VERBOSE=1 && cd .. && ./tests; fi
  - if [ "$TARGET" == "osx" ]; then mkdir build-$TARGET && cd build-$TARGET && cmake -G Xcode .. -DVERBOSE=ON -DUSE_BUILTIN=$USE_BUILTIN && xcodebuild caveexpress.xcodeproj; fi

notifications:
  email: true

install:
  - if [ "$TARGET" == "osx" ]; then brew install cmake; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi

cache: apt
