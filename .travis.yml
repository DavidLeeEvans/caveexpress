os:
  - linux
  - osx

sudo: false

language:
  - cpp
  - android

jdk:
  - oraclejdk8

android:
  components:
  - build-tools-20.0.0
  - android-20
  - sysimg-20
  - add-on
  - extra
  licenses:
  - android-sdk-preview-license-52d11cd2
  - android-sdk-license-.+
  - google-gdk-license-.+

compiler:
  - gcc

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "G4/gfaLtLwXbfTNcGwQ2UsGs5b/EAIeRKkfNKoznWhBxs69AesV0SWhqb/Tr+/EcKEVV+Anh1Akj6YQYFIl6/4jNP7SrVPShTAB3Fo0lXlDwzzt+xK2em+2WA05kOMRBKPmoriOFUcAy1QZ8iOX2V5NZhSrF5MpnBsoU/vbHpeg="
  matrix:
    - USE_BUILTIN=ON
    - USE_BUILTIN=OFF

addons:
  coverity_scan:
    project:
      name: "mgerhardy/caveexpress"
      description: "Build submitted via Travis CI"
    notification_email: martin.gerhardy@gmail.com
    build_command_prepend: "cmake ."
    build_command: "make -j 4"
    branch_pattern: coverity_scan
  apt:
    packages:
    - libglm-dev
    - libgtest-dev
    - libsqlite3-dev
    - liblua5.2-dev
    - zlib1g-dev
    - g++-5
    - gcc-5
    - clang
    - libc6:i386
    - lua5.1
    - libdbus-1-dev
    - build-essential
    - mercurial
    - make
    - cmake
    - autoconf
    - automake
    - libtool
    - libasound2-dev
    - libpulse-dev
    - libaudio-dev
    - libx11-dev
    - libxext-dev
    - libxrandr-dev
    - libxcursor-dev
    - libxi-dev
    - libxinerama-dev
    - libxxf86vm-dev
    - libxss-dev
    - libgl1-mesa-dev
    - libesd0-dev
    - libdbus-1-dev
    - libudev-dev
    - libgles1-mesa-dev
    - libgles2-mesa-dev
    - libegl1-mesa-dev
    - libibus-1.0-dev
    - libgd2-xpm
    - ia32-libs
    - ia32-libs-multiarch
    sources:
    - ubuntu-toolchain-r-test
    - zoogie-sdl2-snapshots

# currently disabled, because sdl2 ppa is not yet available
#    - libbox2d-dev (2.0.1 is not supported - we need 2.3.0)
#    - libsdl2-dev
#    - libsdl2-net-dev
#    - libsdl2-image-dev
#    - libsdl2-mixer-dev
# weird, but there is no libyajl2-dev package
#    - libyajl2-dev

script:
  - "if [ $TRAVIS_OS_NAME == linux ] && [ $USE_BUILTIN == ON ]; then \
        export ANDROID_INSTALL_PACKAGES=ON;
        export ANDROID_RELEASE=OFF;
        export ANDROID_NDK=`pwd`/android-ndk-r10b;
        export NDK_ROOT=`pwd`/android-ndk-r10b;
        export ANDROID_SDK=`pwd`/android-sdk-linux;
        export PATH=${PATH}:${ANDROID_SDK}/tools:${ANDROID_SDK}/platform-tools:${ANDROID_NDK};
        ./contrib/scripts/android.sh;
     fi"
  - "if [ $TRAVIS_OS_NAME == linux ]; then \
        mkdir build-$TRAVIS_OS_NAME;
        cd build-$TRAVIS_OS_NAME;
        cmake .. -DUSE_BUILTIN=$USE_BUILTIN;
        make -j 4 VERBOSE=1;
        cd ..;
        ./tests --gtest-filter=-Network*;
        ./tests_caveexpress --gtest-filter=-Network*;
     fi"
  - "if [ $TRAVIS_OS_NAME == osx ]; then \
        mkdir build-$TRAVIS_OS_NAME;
        cd build-$TRAVIS_OS_NAME;
        cmake -G Xcode .. -DUSE_BUILTIN=$USE_BUILTIN;
        xcodebuild -project caveproductions.xcodeproj -target ALL_BUILD | xcpretty -f `xcpretty-travis-formatter`;
        ls;
        cd ..;
        ls;
        echo;
        ls caveexpress.app/Contents/MacOS;
        echo;
        ls tests.app/Contents/MacOS;
        ./tests.app/Contents/MacOS/tests --gtest-filter=-Network*;
        ./tests_caveexpress.app/Contents/MacOS/tests_caveexpress --gtest-filter=-Network*;
    fi"
  - "if [ $TRAVIS_OS_NAME == osx ] && [ $USE_BUILTIN == ON ]; then \
        mkdir build-ios;
        cd build-ios;
        cmake -G Xcode .. -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/ios-toolchain.cmake -DUSE_BUILTIN=$USE_BUILTIN;
        xcodebuild -project caveproductions.xcodeproj -target ALL_BUILD | xcpretty -f `xcpretty-travis-formatter`;
        ls;
    fi"

notifications:
  email:
    - martin.gerhardy@gmail.com

install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-5"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then gem install xcpretty; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then gem install xcpretty-travis-formatter; fi

before_install:
  - export TERM=dumb
  - "if [ $TRAVIS_OS_NAME == linux ]; then \
        if [ `uname -m` == x86_64 ]; then \
            wget --quiet --continue http://dl.google.com/android/ndk/android-ndk32-r10b-linux-x86_64.tar.bz2 -O ndk.tgz;
        else
            wget --quiet --continue http://dl.google.com/android/ndk/android-ndk32-r10b-linux-x86.tar.bz2 -O ndk.tgz;
        fi;
        tar -xf ndk.tgz;
        wget --quiet --continue http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz;
        tar -xzf android-sdk_r24.4.1-linux.tgz;
        echo \"y\" | ./android-sdk-linux/tools/android update sdk -a -u -s -t platform-tools;
    fi"

cache: apt
